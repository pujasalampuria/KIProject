<KnowledgeItem ID="OpexSoftware:PSAD:PSADWorkflowHandlePKG" xmlns="http://www.arago.de/KiSchema">
	<Title>PSADWorkflowHandlePKG</Title>
	<Description>Initiates the workflow for handling packages related to the installation of PSAD 
		by writing into the MARS model and creating new corresponding DataBlocks in the Issue.
	</Description>

	<BindAttributes>
		<AttributeFilter Name="NodeType" Mode="string" Value="Machine" />
		<RelatedNode Mode="predecessor" Alias="PRE">
			<AttributeFilter Name="NodeType" Mode="string" Value="Application" />
		</RelatedNode>
	</BindAttributes>

	<Log>__KI ${KIID} is now bound to ${NODE:NodeID}__</Log>

	<CreateTrigger>
		<IssueCondition>
			<Description>Searches for an Issue with DataBlock PSADWorkflowHandlePKG and the 
				necessary information for successful completion of workflow.
			</Description>
			<SubItem Name="PSADWorkflowHandlePKG" Alias="PWHP">
				<AttributeFilter Name="TargetApp" Mode="string" Value="${PRE:NodeName}" />
				<AttributeFilter Name="TargetMachine" Mode="string" Value="${NODE:NodeName}" />
				<AttributeFilter Name="EmailID" Mode="exists" />
				<AttributeFilter Name="HostName" Mode="exists" />
				<AttributeFilter Name="TargetTarFileName" Mode="exists" />
				<AttributeFilter Name="TargetPath" Mode="exists" />
				<AttributeFilter Name="DownloadUrl" Mode="exists" />
				<AttributeFilter Name="UntarFolder" Mode="exists" />
				<AttributeFilter Name="User" Mode="exists" />
				<AttributeFilter Name="Host" Mode="exists" />
				<AttributeFilter Name="TargetState" Mode="string" Value="Created" />
				<AttributeFilter Name="Status" Mode="notexists" />
			</SubItem>
		</IssueCondition>

		<Activate>
			<SetAttribute Name="PWHP:Status" Value="WorkflowStarted" />

			<GenerateData Alias="PROTASKS">
				<DataType>ProcessingTasks</DataType>
				<CurrentTask>1</CurrentTask>
			</GenerateData>

			<!--TASK1 Download psad tar file -->
			<IncAttribute Name="PROTASKS:NumberTotal" />

			<XMLExtract StoreTo="NODE:Extensions" Mode="simple"><![CDATA[<NewBlock><Tasks 
				TargetTarFileName=${PWHP:TargetTarFileName}
				TargetMachine=${PWHP:TargetMachine}            
				TargetState=Created
				TargetPath='${PWHP:TargetPath}'
				DownloadUrl='${PWHP:DownloadUrl}'
				Host=${PWHP:Host}
				User=${PWHP:User}
				Lib=WGET
				TaskNumber=${PROTASKS:NumberTotal}
				CurrentState=ReadState/> 
				</NewBlock>]]>
			</XMLExtract>

			<GenerateData Alias="VAL">
				<DataType>Validate</DataType>
				<ExtUID>${NODE:Extensions/Tasks/UID}</ExtUID>
			</GenerateData>

			<!--TASK2 Extract psad tar file -->
			<IncAttribute Name="PROTASKS:NumberTotal" />

			<XMLExtract StoreTo="NODE:Extensions" Mode="simple"><![CDATA[<NewBlock><Tasks 
				TargetTarFileName=${PWHP:TargetTarFileName}
				TargetMachine=${PWHP:TargetMachine}      
				TargetState=Created
				UntarFolder=${PWHP:UntarFolder}      
				TargetPath='${PWHP:TargetPath}'
				Host=${PWHP:Host}
				User=${PWHP:User}
				Lib=TAREXTRACT
				TaskNumber=${PROTASKS:NumberTotal}
				CurrentState=ReadState/> 
				</NewBlock>]]>
			</XMLExtract>

			<GenerateData Alias="VAL">
				<DataType>Validate</DataType>
				<ExtUID>${NODE:Extensions/Tasks/UID}</ExtUID>
			</GenerateData>

			<!-- TASK3 Run Command to rename install.answers.example file -->
			<IncAttribute Name="PROTASKS:NumberTotal" />

			<XMLExtract StoreTo="NODE:Extensions" Mode="simple"><![CDATA[<NewBlock><Tasks 
				TargetMachine=${PWHP:TargetMachine}            
				TargetState=Created
				Host=${PWHP:Host}
				User=${PWHP:User}
				Command='cd /tmp/.psad/psad-2.2 &amp;&amp; sudo mv install.answers.example install.answers'
				Lib=RUNCOMMAND
				TaskNumber=${PROTASKS:NumberTotal}
				CurrentState=ReadState/> 
				</NewBlock>]]>
			</XMLExtract>

			<GenerateData Alias="VAL">
				<DataType>Validate</DataType>
				<ExtUID>${NODE:Extensions/Tasks/UID}</ExtUID>
			</GenerateData>

			<!-- TASK4 Run Command to install psad -->
			<IncAttribute Name="PROTASKS:NumberTotal" />

			<XMLExtract StoreTo="NODE:Extensions" Mode="simple"><![CDATA[<NewBlock><Tasks 
				TargetMachine=${PWHP:TargetMachine}            
				TargetState=Created
				Host=${PWHP:Host}
				User=${PWHP:User}
				Command='cd /tmp/.psad/psad-2.2 &amp;&amp; sudo ./install.pl --Use-answers'
				Lib=RUNCOMMAND
				TaskNumber=${PROTASKS:NumberTotal}
				CurrentState=ReadState/> 
				</NewBlock>]]>
			</XMLExtract>

			<GenerateData Alias="VAL">
				<DataType>Validate</DataType>
				<ExtUID>${NODE:Extensions/Tasks/UID}</ExtUID>
			</GenerateData>

			<!-- TASK5 Run Command to Configure iptables -->
			<IncAttribute Name="PROTASKS:NumberTotal" />

			<XMLExtract StoreTo="NODE:Extensions" Mode="simple"><![CDATA[<NewBlock><Tasks 
				TargetMachine=${PWHP:TargetMachine}      
				TargetState=Created
				User=${PWHP:User}
				Command='sudo iptables -A INPUT -j LOG'
				Lib=RUNCOMMAND
				Host=${PWHP:Host}
				CurrentState=ReadState
				TaskNumber=${PROTASKS:NumberTotal}/> 
				</NewBlock>]]>
			</XMLExtract>

			<GenerateData Alias="VAL">
				<DataType>Validate</DataType>
				<ExtUID>${NODE:Extensions/Tasks/UID}</ExtUID>
			</GenerateData>

			<!-- TASK6 Run Command to Configure iptables -->
			<IncAttribute Name="PROTASKS:NumberTotal" />

			<XMLExtract StoreTo="NODE:Extensions" Mode="simple"><![CDATA[<NewBlock><Tasks 
				TargetMachine=${PWHP:TargetMachine}      
				TargetState=Created
				User=${PWHP:User}
				Command='sudo iptables -A FORWARD -j LOG'
				Lib=RUNCOMMAND
				Host=${PWHP:Host}
				CurrentState=ReadState
				TaskNumber=${PROTASKS:NumberTotal}/> 
				</NewBlock>]]>
			</XMLExtract>

			<GenerateData Alias="VAL">
				<DataType>Validate</DataType>
				<ExtUID>${NODE:Extensions/Tasks/UID}</ExtUID>
			</GenerateData>

			<!-- TASK7 Run Command to Configure psad -->
			<IncAttribute Name="PROTASKS:NumberTotal" />

			<XMLExtract StoreTo="NODE:Extensions" Mode="simple"><![CDATA[<NewBlock><Tasks 
				TargetMachine=${PWHP:TargetMachine}      
				TargetState=Created
				User=${PWHP:User}
				Command='sudo sed -i &apos;s/\/var\/log\/messages/\/var\/log\/syslog/g&apos; /etc/psad/psad.conf'
				Lib=RUNCOMMAND
				Host=${PWHP:Host}
				CurrentState=ReadState
				TaskNumber=${PROTASKS:NumberTotal}/> 
				</NewBlock>]]>
			</XMLExtract>

			<GenerateData Alias="VAL">
				<DataType>Validate</DataType>
				<ExtUID>${NODE:Extensions/Tasks/UID}</ExtUID>
			</GenerateData>

			<!-- TASK8 Run Command to Configure psad -->
			<IncAttribute Name="PROTASKS:NumberTotal" />

			<XMLExtract StoreTo="NODE:Extensions" Mode="simple"><![CDATA[<NewBlock><Tasks 
				TargetMachine=${PWHP:TargetMachine}      
				TargetState=Created
				User=${PWHP:User}
				Command='sudo sed -i &apos;s/root@localhost/${PWHP:EmailID}/&apos; /etc/psad/psad.conf'
				Lib=RUNCOMMAND
				Host=${PWHP:Host}
				CurrentState=ReadState
				TaskNumber=${PROTASKS:NumberTotal}/> 
				</NewBlock>]]>
			</XMLExtract>

			<GenerateData Alias="VAL">
				<DataType>Validate</DataType>
				<ExtUID>${NODE:Extensions/Tasks/UID}</ExtUID>
			</GenerateData>

			<!-- TASK9 Run Command to Configure psad -->
			<IncAttribute Name="PROTASKS:NumberTotal" />

			<XMLExtract StoreTo="NODE:Extensions" Mode="simple"><![CDATA[<NewBlock><Tasks 
				TargetMachine=${PWHP:TargetMachine}      
				TargetState=Created
				User=${PWHP:User}
				Command='sudo sed -i &apos;s/_CHANGEME_/${PWHP:HostName}/&apos; /etc/psad/psad.conf'
				Lib=RUNCOMMAND
				Host=${PWHP:Host}
				CurrentState=ReadState
				TaskNumber=${PROTASKS:NumberTotal}/> 
				</NewBlock>]]>
			</XMLExtract>

			<GenerateData Alias="VAL">
				<DataType>Validate</DataType>
				<ExtUID>${NODE:Extensions/Tasks/UID}</ExtUID>
			</GenerateData>

			<!-- TASK10 Run Command to Configure psad -->
			<IncAttribute Name="PROTASKS:NumberTotal" />

			<XMLExtract StoreTo="NODE:Extensions" Mode="simple"><![CDATA[<NewBlock><Tasks 
				TargetMachine=${PWHP:TargetMachine}      
				TargetState=Created
				User=${PWHP:User}
				Command='sudo sed -i &apos;s/IGNORE_PORTS                NONE;/IGNORE_PORTS                ports_or_range_to_ignore;/&apos; /etc/psad/psad.conf'
				Lib=RUNCOMMAND
				Host=${PWHP:Host}
				CurrentState=ReadState
				TaskNumber=${PROTASKS:NumberTotal}/> 
				</NewBlock>]]>
			</XMLExtract>

			<GenerateData Alias="VAL">
				<DataType>Validate</DataType>
				<ExtUID>${NODE:Extensions/Tasks/UID}</ExtUID>
			</GenerateData>

            <!-- To Complete the workflow please run 1.psad -R to restart the service 2. psad --sig-update to  update psad's signature definitions 3. psad -H -->

			<GenerateData>
				<DataType>Resolve</DataType>
				<Status>checkForResolve</Status>
			</GenerateData>
		</Activate>
	</CreateTrigger> 
</KnowledgeItem>