<KnowledgeItem ID="OpexSoftware:POSTGRESQLUSER:PostgreSQLUserManagement" xmlns="http://www.arago.de/KiSchema">
	<Title>PostgreSQLUserManagement</Title>
	<Description>Initiates the workflow for handling packages by writing into the MARS model and creating new corresponding data blocks in the Issue</Description>

	<BindAttributes>
		<AttributeFilter Name="NodeType" Mode="string" Value="Machine"/>
		<RelatedNode Mode="predecessor" Alias="PRE">
			<AttributeFilter Name="NodeType" Mode="string" Value="Application"/>
		</RelatedNode>
	</BindAttributes>

	<Log>__KI ${KIID} is now bound to ${NODE:NodeID}__</Log>

	<CreateTrigger>

		<IssueCondition>
			<Description>Searches for an Issue with DataBlock POSTGRESQLUSER and the necessary information for successful completion of workflow</Description>
			<SubItem Name="PostgreSqlUser" Alias="POSTGRESQLUSER">
				<AttributeFilter Name="TargetApp" Mode="string" Value="${PRE:NodeName}"/>
				<AttributeFilter Name="TargetMachine" Mode="string" Value="${NODE:NodeName}"/>
				<AttributeFilter Name="NewDBUserName" Mode="exists"/>
				<AttributeFilter Name="NewDBPassword" Mode="exists"/>
				<AttributeFilter Name="User" Mode="exists"/>
				<AttributeFilter Name="Host" Mode="exists"/>
				<AttributeFilter Name="TargetState" Mode="string" Value="Created"/>
				<AttributeFilter Name="Status" Mode="notexists"/>
				
			</SubItem>
		</IssueCondition>

		<Activate>
			
			<SetAttribute Name="POSTGRESQLUSER:Status" Value="WorkflowStarted" /> 
			
			<GenerateData Alias="PROTASKS"> 
				<DataType>ProcessingTasks</DataType>
				<CurrentTask>1</CurrentTask> 
			</GenerateData>
			
			<IncAttribute Name="PROTASKS:NumberTotal"/>
			
			<XMLExtract StoreTo="NODE:Extensions" Mode="simple"><![CDATA[<NewBlock><Tasks 			
				TargetMachine=${POSTGRESQLUSER:TargetMachine}      
				TargetState=Created
				NewDBUserName=${POSTGRESQLUSER:NewDBUserName}
				NewDBPassword=${POSTGRESQLUSER:NewDBPassword}
				Host=${POSTGRESQLUSER:Host}
				User=${POSTGRESQLUSER:User}
				TaskNumber=${PROTASKS:NumberTotal}
				Command1='psql -c \"CREATE USER ${POSTGRESQLUSER:NewDBUserName} WITH PASSWORD'
				Command2='${POSTGRESQLUSER:NewDBPassword}' 
				Command3='\"'
				Lib=RUNCOMMAND
				CurrentState=ReadState/> 
				</NewBlock>]]>
			</XMLExtract> 
			<SetAttribute Name="NODE:Extensions/Tasks/Command" Value="${NODE:Extensions/Tasks/Command1} '${NODE:Extensions/Tasks/Command2}';${NODE:Extensions/Tasks/Command3}"/>
 
      
			<GenerateData Alias="VAL"> 
				<!-- Independent="true" can be applied, if multiple Issues should be generated. In this case pass on the parent IssueID to the resulting Issue <ParentIID>${IID}</ParentIID>, don't forget to include ParentIID=${IID} into the Tasks DataBlock on the Node -->
				<DataType>Validate</DataType>
				<ExtUID>${NODE:Extensions/Tasks/UID}</ExtUID>
			</GenerateData>	
			 	
			<!--		<Resolve>Resolved initial Issue with ID ${IID}</Resolve> - use if ChildIssues are created-->
			
			<GenerateData> 
				<DataType>Resolve</DataType>
				<Status>checkForResolve</Status>
			</GenerateData>	
			
		</Activate>
	</CreateTrigger>
</KnowledgeItem>
