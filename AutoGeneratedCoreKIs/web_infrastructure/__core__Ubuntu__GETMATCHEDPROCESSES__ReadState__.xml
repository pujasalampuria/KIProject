<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--- - -
module: supervisorctl
short_description: Manage the state of a program or group of programs running via supervisord
description:
     - Manage the state of a program or group of programs running via supervisord
version_added: "0.7"
options:
  name:
    description:
      - The name of the supervisord program or group to manage.  
      - The name will be taken as group name when it ends with a colon I(:)
      - Group support is only available in Ansible version 1.6 or later.
    required: true
    default: null
  config:
    description:
      - The supervisor configuration file path
    required: false
    default: null
    version_added: "1.3"
  server_url:
    description:
      - URL on which supervisord server is listening
    required: false
    default: null
    version_added: "1.3"
  username:
    description:
      - username to use for authentication
    required: false
    default: null
    version_added: "1.3"
  password:
    description:
      - password to use for authentication
    required: false
    default: null
    version_added: "1.3"
  state:
    description:
      - The desired state of program/group.
    required: true
    default: null
    choices: [ "present", "started", "stopped", "restarted" ]
  supervisorctl_path:
    description:
      - path to supervisorctl executable
    required: false
    default: null
    version_added: "1.4"
notes:
  - When C(state) = I(present), the module will call C(supervisorctl reread) then C(supervisorctl add) if the program/group does not exist.
  - When C(state) = I(restarted), the module will call C(supervisorctl update) then call C(supervisorctl restart).
requirements: [ "supervisorctl" ]
--><KnowledgeItem xmlns="http://www.arago.de/KiSchema" ID="OpexSoftware:SUPERVISORCTL:__core__Ubuntu__GETMATCHEDPROCESSES__ReadState__">
	<Title>__core__Ubuntu__GETMATCHEDPROCESSES__ReadState__</Title>
	<Description>This KI searches for the DataBlock called __core__Ubuntu__GETMATCHEDPROCESSES__ReadState__ and Manage the state of a program or group of programs running via supervisord and writes the current status back to the node.</Description>

	<BindAttributes>
		<AttributeFilter Mode="string" Name="NodeType" Value="Machine"/>
		<SubItem Alias="OSINFO" Name="OSInformation">
			<AttributeFilter Mode="string" Name="Name" Value="Ubuntu"/>
		</SubItem>
		<SubItem Alias="EXT" Name="Extensions">
			<SubItem Alias="TASKS" Name="Tasks">
				<AttributeFilter Mode="exists" Name="TargetPath"/>
				<AttributeFilter Mode="exists" Name="User"/>
				<AttributeFilter Mode="exists" Name="Host"/>
			<AttributeFilter Mode="Exists" Name="name"/>
        <AttributeFilter Mode="Exists" Name="state"/>
        <AttributeFilter Mode="exists" Name="module" Value="supervisorctl"/>
      </SubItem>
		</SubItem>
	</BindAttributes>

	<Log>__KI ${KIID} is now bound to ${NODE:NodeID}__</Log>
		
	<CreateTrigger>
		<IssueCondition>
			<Description> Checks Issue for DataBlock __core__${NODE:OSInfo}__WGET__ReadState__ and attribute ExtUID being the same as the machine KI binds to. </Description>
			<SubItem Alias="CHECK" Name="__core__Ubuntu__WGET__ReadState__">
				<AttributeFilter Mode="string" Name="ExtUID" Value="${TASKS:UID}"/>	
				<AttributeFilter Mode="notexists" Name="Status"/>	
			</SubItem>
		</IssueCondition>

		<Activate>
			<Action Capability="ExecuteCommand" Error="ERROR" Output="OUTPUT" Result="RESULT" SystemRC="SYSTEMRC" Timeout="60">
				<Parameter Name="User">${TASKS:User}</Parameter>
				<Parameter Name="Hostname">${TASKS:Host}</Parameter>
				<Parameter Name="Command"/> 
			</Action>
			
			<If>
				<VarCondition Mode="eq" Value="0" VarString="${SYSTEMRC}"/>
				<Then>
					<SetAttribute Name="TASKS:CurrentState" Value="Created"/>
				</Then>
				<Else>
					<SetAttribute Name="TASKS:CurrentState" Value="Deleted"/>
				</Else>
			</If>			
			<SetAttribute Name="CHECK:Status" Value="CurrentStateRead"/> 
			
		</Activate>
	</CreateTrigger>
</KnowledgeItem>
