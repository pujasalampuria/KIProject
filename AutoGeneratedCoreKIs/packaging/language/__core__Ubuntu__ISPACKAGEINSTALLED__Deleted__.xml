<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--- - -
module: easy_install
short_description: Installs Python libraries
description:
     - Installs Python libraries, optionally in a I(virtualenv)
version_added: "0.7"
options:
  name:
    description:
      - A Python library name
    required: true
    default: null
    aliases: []
  virtualenv:
    description:
      - an optional I(virtualenv) directory path to install into. If the
        I(virtualenv) does not exist, it is created automatically
    required: false
    default: null
  virtualenv_site_packages:
    version_added: "1.1"
    description:
      - Whether the virtual environment will inherit packages from the
        global site-packages directory.  Note that if this setting is
        changed on an already existing virtual environment it will not
        have any effect, the environment must be deleted and newly
        created.
    required: false
    default: "no"
    choices: [ "yes", "no" ]
  virtualenv_command:
    version_added: "1.1"
    description:
      - The command to create the virtual environment with. For example
        C(pyvenv), C(virtualenv), C(virtualenv2).
    required: false
    default: virtualenv
  executable:
    description:
      - The explicit executable or a pathname to the executable to be used to
        run easy_install for a specific version of Python installed in the
        system. For example C(easy_install-3.3), if there are both Python 2.7
        and 3.3 installations in the system and you want to run easy_install
        for the Python 3.3 installation.
    version_added: "1.3"
    required: false
    default: null
notes:
    - Please note that the M(easy_install) module can only install Python
      libraries. Thus this module is not able to remove libraries. It is
      generally recommended to use the M(pip) module which you can first install
      using M(easy_install).
    - Also note that I(virtualenv) must be installed on the remote host if the
      C(virtualenv) parameter is specified.
requirements: [ "virtualenv" ]
--><KnowledgeItem xmlns="http://www.arago.de/KiSchema" ID="OpexSoftware:EASY_INSTALL:__core__Ubuntu__ISPACKAGEINSTALLED__Deleted__">
	<Title>__core__Ubuntu__ISPACKAGEINSTALLED__Deleted__</Title>
	<Description>This KI searches for the DataBlock called __core__Ubuntu__ISPACKAGEINSTALLED__Deleted__ and Installs Python libraries and writes the current status back to the node.</Description>

	<BindAttributes>
		<AttributeFilter Mode="string" Name="NodeType" Value="Machine"/>
		<AttributeFilter Mode="string" Name="MachineClass" Value="Linux"/>
		<SubItem Alias="OSINFO" Name="OSInformation">
			<AttributeFilter Mode="string" Name="Name" Value="Ubuntu"/>
		</SubItem>
		<SubItem Alias="EXT" Name="Extensions">
			<SubItem Alias="TASKS" Name="Tasks">
				<AttributeFilter Mode="exists" Name="TargetMachine"/>
				<AttributeFilter Mode="exists" Name="User"/>
				<AttributeFilter Mode="exists" Name="Host"/>
			<AttributeFilter Mode="Exists" Name="name"/>
        <AttributeFilter Mode="exists" Name="module" Value="easy_install"/>
      </SubItem>
		</SubItem>
	</BindAttributes>
	
	<Log>__KI ${KIID} is now bound to ${NODE:NodeID}__</Log>
		
	<CreateTrigger>
		<IssueCondition>
			<Description> Checks Issue for DataBlock __core__${NODE:OSInfo}__PKG__Deleted__ and attribute ExtUID being the same as in the Node the KI binds to. </Description>
			<SubItem Alias="UNINSTALL" Name="__core__Ubuntu__PKG__Deleted__">
				<AttributeFilter Mode="string" Name="ExtUID" Value="${TASKS:UID}"/>
				<AttributeFilter Mode="notexists" Name="Status"/>	
			</SubItem>
		</IssueCondition>

		<Activate>
			<Action Capability="ExecuteCommand" Error="ERROR" Output="OUTPUT" Result="RESULT" SystemRC="SYSTEMRC" Timeout="60">
				<Parameter Name="User">${TASKS:User}</Parameter>
				<Parameter Name="Hostname">${TASKS:Host}</Parameter>
				<Parameter Name="Command"/> 
			</Action>
			
			<If>
				<VarCondition Mode="eq" Value="0" VarString="${SYSTEMRC}"/>
				<Then>
					<SetAttribute Name="TASKS:CurrentState" Value="ReadState"/>
				</Then>
				<Else>
					<Eject/>
				</Else>
			</If>
			<SetAttribute Name="UNINSTALL:Status" Value="uninstalled"/> 

		</Activate>
	</CreateTrigger>
</KnowledgeItem>
