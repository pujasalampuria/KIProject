<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--- - -
module: rax_clb
short_description: create / delete a load balancer in Rackspace Public Cloud
description:
     - creates / deletes a Rackspace Public Cloud load balancer.
version_added: "1.4"
options:
  algorithm:
    description:
      - algorithm for the balancer being created
    choices:
      - RANDOM
      - LEAST_CONNECTIONS
      - ROUND_ROBIN
      - WEIGHTED_LEAST_CONNECTIONS
      - WEIGHTED_ROUND_ROBIN
    default: LEAST_CONNECTIONS
  meta:
    description:
      - A hash of metadata to associate with the instance
    default: null
  name:
    description:
      - Name to give the load balancer
    default: null
  port:
    description:
      - Port for the balancer being created
    default: 80
  protocol:
    description:
      - Protocol for the balancer being created
    choices:
      - DNS_TCP
      - DNS_UDP
      - FTP
      - HTTP
      - HTTPS
      - IMAPS
      - IMAPv4
      - LDAP
      - LDAPS
      - MYSQL
      - POP3
      - POP3S
      - SMTP
      - TCP
      - TCP_CLIENT_FIRST
      - UDP
      - UDP_STREAM
      - SFTP
    default: HTTP
  state:
    description:
      - Indicate desired state of the resource
    choices:
      - present
      - absent
    default: present
  timeout:
    description:
      - timeout for communication between the balancer and the node
    default: 30
  type:
    description:
      - type of interface for the balancer being created
    choices:
      - PUBLIC
      - SERVICENET
    default: PUBLIC
  vip_id:
    description:
      - Virtual IP ID to use when creating the load balancer for purposes of
        sharing an IP with another load balancer of another protocol
    version_added: 1.5
  wait:
    description:
      - wait for the balancer to be in state 'running' before returning
    default: "no"
    choices:
      - "yes"
      - "no"
  wait_timeout:
    description:
      - how long before wait gives up, in seconds
    default: 300
--><KnowledgeItem xmlns="http://www.arago.de/KiSchema" ID="OpexSoftware:RAX_CLB:__core__Ubuntu__CLOUDLOADBALANCER__Created__">
	<Title>__core__Ubuntu__CLOUDLOADBALANCER__Created__</Title>
	<Description>This KI searches for the DataBlock called __core__Ubuntu__CLOUDLOADBALANCER__Created__ and create / delete a load balancer in Rackspace Public Cloud and writes the current status back to the node.</Description>

	<BindAttributes>
		<AttributeFilter Mode="string" Name="NodeType" Value="Machine"/>
		<AttributeFilter Mode="string" Name="MachineClass" Value="Linux"/>
		<SubItem Alias="OSINFO" Name="OSInformation">
			<AttributeFilter Mode="string" Name="Name" Value="CentOS"/>
		</SubItem>
		<SubItem Alias="EXT" Name="Extensions">
			<SubItem Alias="TASKS" Name="Tasks">
				<AttributeFilter Mode="exists" Name="TargetMachine"/>
				<AttributeFilter Mode="exists" Name="User"/>
				<AttributeFilter Mode="exists" Name="Host"/>
			<AttributeFilter Mode="exists" Name="module" Value="rax_clb"/>
      </SubItem>
		</SubItem>
	</BindAttributes>
	
	<Log>__KI ${KIID} is now bound to ${NODE:NodeID}__</Log>
		
	<CreateTrigger>
		<IssueCondition>
			<Description> Checks Issue for DataBlock __core__${NODE:OSInfo}__PKG__Created__ and attribute ExtUID being the same as in the Node the KI binds to. </Description>
			<SubItem Alias="INSTALL" Name="__core__CentOS__PKG__Created__">
				<AttributeFilter Mode="string" Name="ExtUID" Value="${TASKS:UID}"/>
				<AttributeFilter Mode="notexists" Name="Status"/>	
			</SubItem>
		</IssueCondition>

		<Activate>
			<Action Capability="ExecuteCommand" Error="ERROR" Output="OUTPUT" Result="RESULT" SystemRC="SYSTEMRC" Timeout="60">
				<Parameter Name="User">${TASKS:User}</Parameter>
				<Parameter Name="Hostname">${TASKS:Host}</Parameter>
				<Parameter Name="Command"/> 
			</Action>
			
			<If>
				<VarCondition Mode="eq" Value="0" VarString="${SYSTEMRC}"/>
				<Then>
					<SetAttribute Name="TASKS:CurrentState" Value="ReadState"/>
				</Then>
				<Else>
					<Eject/>
				</Else>
			</If>

			<SetAttribute Name="INSTALL:Status" Value="created"/> 
		</Activate>
	</CreateTrigger>
</KnowledgeItem>
