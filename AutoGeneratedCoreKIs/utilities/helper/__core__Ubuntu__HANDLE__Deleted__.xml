<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--- - -
module: accelerate
short_description: Enable accelerated mode on remote node
description:
     - This modules launches an ephemeral I(accelerate) daemon on the remote node which
       Ansible can use to communicate with nodes at high speed.
     - The daemon listens on a configurable port for a configurable amount of time.
     - Fireball mode is AES encrypted
version_added: "1.3"
options:
  port:
    description:
      - TCP port for the socket connection
    required: false
    default: 5099
    aliases: []
  timeout:
    description:
      - The number of seconds the socket will wait for data. If none is received when the timeout value is reached, the connection will be closed.
    required: false
    default: 300
    aliases: []
  minutes:
    description:
      - The I(accelerate) listener daemon is started on nodes and will stay around for
        this number of minutes before turning itself off.
    required: false
    default: 30
  ipv6:
    description:
      - The listener daemon on the remote host will bind to the ipv6 localhost socket
        if this parameter is set to true.
    required: false
    default: false
  multi_key:
    description:
      - When enabled, the daemon will open a local socket file which can be used by future daemon executions to 
        upload a new key to the already running daemon, so that multiple users can connect using different keys.
        This access still requires an ssh connection as the uid for which the daemon is currently running.
    required: false
    default: no
    version_added: "1.6"
notes:
    - See the advanced playbooks chapter for more about using accelerated mode.
requirements: [ "python-keyczar" ]
--><KnowledgeItem xmlns="http://www.arago.de/KiSchema" ID="OpexSoftware:ACCELERATE:__core__Ubuntu__HANDLE__Deleted__">
	<Title>__core__Ubuntu__HANDLE__Deleted__</Title>
	<Description>This KI searches for the DataBlock called __core__Ubuntu__HANDLE__Deleted__ and Enable accelerated mode on remote node and writes the current status back to the node.</Description>

	<BindAttributes>
		<AttributeFilter Mode="string" Name="NodeType" Value="Machine"/>
		<AttributeFilter Mode="string" Name="MachineClass" Value="Linux"/>
		<SubItem Alias="OSINFO" Name="OSInformation">
			<AttributeFilter Mode="string" Name="Name" Value="Ubuntu"/>
		</SubItem>
		<SubItem Alias="EXT" Name="Extensions">
			<SubItem Alias="TASKS" Name="Tasks">
				<AttributeFilter Mode="exists" Name="TargetMachine"/>
				<AttributeFilter Mode="exists" Name="User"/>
				<AttributeFilter Mode="exists" Name="Host"/>
			<AttributeFilter Mode="exists" Name="module" Value="accelerate"/>
      </SubItem>
		</SubItem>
	</BindAttributes>
	
	<Log>__KI ${KIID} is now bound to ${NODE:NodeID}__</Log>
		
	<CreateTrigger>
		<IssueCondition>
			<Description> Checks Issue for DataBlock __core__${NODE:OSInfo}__PKG__Deleted__ and attribute ExtUID being the same as in the Node the KI binds to. </Description>
			<SubItem Alias="UNINSTALL" Name="__core__Ubuntu__PKG__Deleted__">
				<AttributeFilter Mode="string" Name="ExtUID" Value="${TASKS:UID}"/>
				<AttributeFilter Mode="notexists" Name="Status"/>	
			</SubItem>
		</IssueCondition>

		<Activate>
			<Action Capability="ExecuteCommand" Error="ERROR" Output="OUTPUT" Result="RESULT" SystemRC="SYSTEMRC" Timeout="60">
				<Parameter Name="User">${TASKS:User}</Parameter>
				<Parameter Name="Hostname">${TASKS:Host}</Parameter>
				<Parameter Name="Command"/> 
			</Action>
			
			<If>
				<VarCondition Mode="eq" Value="0" VarString="${SYSTEMRC}"/>
				<Then>
					<SetAttribute Name="TASKS:CurrentState" Value="ReadState"/>
				</Then>
				<Else>
					<Eject/>
				</Else>
			</If>
			<SetAttribute Name="UNINSTALL:Status" Value="uninstalled"/> 

		</Activate>
	</CreateTrigger>
</KnowledgeItem>
