<KnowledgeItem ID="OpexSofware:IpTable:ConfigureIptableBasedFirewallDropWorkflow" xmlns="http://www.arago.de/KiSchema">
	<Title>ConfigureIptableBasedFirewallDropWorkflow</Title>
	<Description>Initiates the workflow for configuring Iptable-based Firewall for droping connection on 
		particular port by writing into the MARS model and creating new corresponding DataBlocks in the Issue.
	</Description>

	<BindAttributes>
		<AttributeFilter Name="NodeType" Mode="string" Value="Machine"/>
		<SubItem Name="Extensions" Alias="EXTS">
      		<TrueFilter/>
    	</SubItem>
		<RelatedNode Mode="predecessor" Alias="PRE">
			<AttributeFilter Name="NodeType" Mode="string" Value="Application"/>
		</RelatedNode>
	</BindAttributes>

	<Log>__KI ${KIID} is now bound to ${NODE:NodeID}__</Log>

	<CreateTrigger>
		<IssueCondition>
			<Description>Searches for an Issue with DataBlock ConfigureIptableBasedFirewallDropWorkflow 
				and the necessary information for successful completion of workflow.
			</Description>
			<SubItem Name="ConfigureIptableBasedFirewallDropWorkflow" Alias="CIBFDW">
				<AttributeFilter Name="TargetApp" Mode="string" Value="${PRE:NodeName}"/>
				<AttributeFilter Name="TargetMachine" Mode="string" Value="${NODE:NodeName}"/>
				<AttributeFilter Name="ProtocolOfRule" Mode="exists"/>
				<AttributeFilter Name="PortToDrop" Mode="exists"/>
				<AttributeFilter Name="User" Mode="exists"/>
				<AttributeFilter Name="Host" Mode="exists"/>
				<AttributeFilter Name="TargetState" Mode="string" Value="Created"/>
				<AttributeFilter Name="Status" Mode="notexists"/>
			</SubItem>
		</IssueCondition>

		<Activate>
			<SetAttribute Name="CIBFDW:Status" Value="WorkflowStarted" /> 

			<GenerateData Alias="PROTASKS"> 
				<DataType>ProcessingTasks</DataType>
				<CurrentTask>1</CurrentTask> 
			</GenerateData>

			 <!-- TASK1 Allow all current connections stay online -->
			<IncAttribute Name="PROTASKS:NumberTotal"/>

			
			<UpdateData Base="EXTS" Name="Tasks" Alias="TASK1">
		        <KeyAttributes>
		          <UID> </UID>
		        </KeyAttributes>
		        <Attributes>
		          <LIB>IPTABLESACCEPT</LIB>
		          <TargetMachine>${CIBFDW:TargetMachine}</TargetMachine>      
		          <TargetState>Created</TargetState>
		          <User>${CIBFDW:User}</User>
		          <Host>${CIBFDW:Host}</Host>
		          <!-- <Command>'sudo iptables -A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT'</Command> -->
		          <CurrentState>ReadState</CurrentState>
		          <TaskNumber>${PROTASKS:NumberTotal}</TaskNumber>
		        </Attributes>
     		</UpdateData>
	
      
			<GenerateData Alias="VAL"> 
				<DataType>Validate</DataType>
				<ExtUID>${TASK1:UID}</ExtUID>
			</GenerateData>	
			
			<!-- TASK2 Accepting connection on a specified port -->
			<IncAttribute Name="PROTASKS:NumberTotal"/>

			
			
			<UpdateData Base="EXTS" Name="Tasks" Alias="TASK2">
		        <KeyAttributes>
		          <UID> </UID>
		        </KeyAttributes>
		        <Attributes>
		          <LIB>IPTABLESDROPPORT</LIB>
		          <TargetMachine>${CIBFDW:TargetMachine}</TargetMachine>      
		          <TargetState>Created</TargetState>
		          <User>${CIBFDW:User}</User>
		          <Host>${CIBFDW:Host}</Host>
		          <ProtocolOfRule>${CIBFDW:ProtocolOfRule}</ProtocolOfRule>
		          <PortToDrop>${CIBFDW:PortToDrop}</PortToDrop>
		          <!-- <Command>sudo iptables -A INPUT -p ${CIBFDW:ProtocolOfRule} --dport ${CIBFDW:PortToDrop} -j DROP</Command> -->
		          <CurrentState>ReadState</CurrentState>
		          <TaskNumber>${PROTASKS:NumberTotal}</TaskNumber>
		        </Attributes>
     		</UpdateData>
      
			<GenerateData Alias="VAL"> 
				<DataType>Validate</DataType>
				<ExtUID>${TASK2:UID}</ExtUID>
			</GenerateData>	
			
			<!-- TASK3 Bringing the new rule first in the List -->
			<IncAttribute Name="PROTASKS:NumberTotal"/>

			
			<UpdateData Base="EXTS" Name="Tasks" Alias="TASK3">
        		<KeyAttributes>
          		<UID> </UID>
        		</KeyAttributes>
        		<Attributes>
		          <LIB>IPTABLESCOMMANDDROP</LIB>
		          <TargetMachine>${CIBFDW:TargetMachine}</TargetMachine>      
		          <TargetState>Created</TargetState>
		          <User>${CIBFDW:User}</User>
		          <Host>${CIBFDW:Host}</Host>
		          <ProtocolOfRule>${CIBFDW:ProtocolOfRule}</ProtocolOfRule>
		          <PortToDrop>${CIBFDW:PortToDrop}</PortToDrop>
		          <!-- <Command>'sudo iptables -I INPUT 1 -i lo -j DROP'</Command> -->
		          <CurrentState>ReadState</CurrentState>
		          <TaskNumber>${PROTASKS:NumberTotal}</TaskNumber>
		        </Attributes>
		     </UpdateData>
      
			<GenerateData Alias="VAL"> 
				<DataType>Validate</DataType>
				<ExtUID>${TASK3:UID}</ExtUID>
			</GenerateData>	
			
			<!-- TASK4 Install a iptables-persistence -->
			<IncAttribute Name="PROTASKS:NumberTotal"/>

			
			
			<UpdateData Base="EXTS" Name="Tasks" Alias="TASK4">
		        <KeyAttributes>
		          <UID> </UID>
		        </KeyAttributes>
			        <Attributes>
			          <LIB>PKG</LIB>
			          <PKG>iptables-persistent</PKG>
			          <TargetMachine>${CIBFDW:TargetMachine}</TargetMachine>      
			          <TargetState>Created</TargetState>
			          <User>${CIBFDW:User}</User>
			          <Host>${CIBFDW:Host}</Host>
			          <CurrentState>ReadState</CurrentState>
			          <TaskNumber>${PROTASKS:NumberTotal}</TaskNumber>
			        </Attributes>
     		</UpdateData>
      
			<GenerateData Alias="VAL"> 
				<DataType>Validate</DataType>
				<ExtUID>${TASK4:UID}</ExtUID>
			</GenerateData>	
      
      		<!-- TASK5 Start the iptables-persistence service -->
			<IncAttribute Name="PROTASKS:NumberTotal"/>
			
            <UpdateData Base="EXTS" Name="Tasks" Alias="TASK5">
		        <KeyAttributes>
		          <UID> </UID>
		        </KeyAttributes>
		        <Attributes>
		          <LIB>IPTABLESCOMMANDSTART</LIB>
		          <TargetMachine>${CIBFDW:TargetMachine}</TargetMachine>      
		          <TargetState>Created</TargetState>
		          <User>${CIBFDW:User}</User>
		          <Host>${CIBFDW:Host}</Host>
		          <Command>sudo service iptables-persistent start</Command>
		          <CurrentState>ReadState</CurrentState>
		          <TaskNumber>${PROTASKS:NumberTotal}</TaskNumber>
		        </Attributes>
     		</UpdateData>
      
			<GenerateData Alias="VAL"> 
				<DataType>Validate</DataType>
				<ExtUID>${TASK5:UID}</ExtUID>
			</GenerateData>	
      		
			<GenerateData> 
				<DataType>Resolve</DataType>
				<Status>checkForResolve</Status>
			</GenerateData>	
		</Activate>
	</CreateTrigger>
</KnowledgeItem>