<KnowledgeItem ID="OpexSoftware:WorkFlowUserStory:AptUpdateSource" xmlns="http://www.arago.de/KiSchema">
	<Title>AptUpdateSource</Title>
	<Description>Initiates the workflow for updating APT Source </Description>
	<BindAttributes>
		<AttributeFilter Name="NodeType" Mode="string" Value="Machine"/>
	</BindAttributes>

	<Log>__KI ${KIID} is now bound to ${NODE:NodeID}__</Log>

	<CreateTrigger>
	     <IssueCondition>
		 <Description>Searches for an Issue with DataBlock APTUPDATESOURCE and triggers the workflow for successful completion</Description>
			<SubItem Name="AptUpdateSource" Alias="APTUPDATESOURCE">
				<AttributeFilter Name="TargetMachine" Mode="string" Value="${NODE:NodeName}"/>
				<AttributeFilter Name="TargetState" Mode="string" Value="Created"/>
				<AttributeFilter Name="Status" Mode="notexists"/>
				<AttributeFilter Name="TargetApp" Mode="exists"/>
			</SubItem>
		</IssueCondition>

	     <Activate>
			<SetAttribute Name="APTUPDATESOURCE:Status" Value="WorkflowStarted" /> 
			<GenerateData Alias="PROTASKS">
                            <DataType>ProcessingTasks</DataType>
                            <CurrentTask>1</CurrentTask>
			</GenerateData>

			<!--Task1 Update the apt Source File -->
			
			<IncAttribute Name="PROTASKS:NumberTotal"/>
			
			<XMLExtract StoreTo="NODE:Extensions" Mode="simple"><![CDATA[<NewBlock><Tasks
				TargetMachine=${APTUPDATESOURCE:TargetMachine}      
				TargetState=Created
				User=${APTUPDATESOURCE:User}
				Lib=APTSOURCEMODIFICATION
				PKG=mongodb-org
				Host=${APTUPDATESOURCE:Host}
				AptRepoUrl='${APTUPDATESOURCE:AptRepoUrl}'
				AptArchiveType=${APTUPDATESOURCE:AptArchiveType}
				AptDistribution='${APTUPDATESOURCE:AptDistribution}'
				AptComponents=${APTUPDATESOURCE:AptComponents}
				AptKey=${APTUPDATESOURCE:AptKey}
				CurrentState=ReadState
				TaskNumber=${PROTASKS:NumberTotal}
				/> </NewBlock>]]>
			</XMLExtract>
			
      
			<GenerateData Alias="VAL"> 
				<!-- Independent="true" can be applied, if multiple Issues should be generated. In this case pass on the parent IssueID to the resulting Issue <ParentIID>${IID}</ParentIID>, don't forget to include ParentIID=${IID} into the Tasks DataBlock on the Node -->
				<DataType>Validate</DataType>
				<ExtUID>${NODE:Extensions/Tasks/UID}</ExtUID>
			</GenerateData>	

			<!--<Resolve>Resolved initial Issue with ID ${IID}</Resolve> - use if ChildIssues are created-->
			
			<GenerateData> 
				<DataType>Resolve</DataType>
				<Status>checkForResolve</Status>
			</GenerateData>	
		</Activate>
	</CreateTrigger>
</KnowledgeItem>
